---
import { getCollection } from 'astro:content';

const services = await getCollection('services')
  .then(all => all.filter(s => s.data.published))
  .then(all => all.sort((a, b) => a.data.order - b.data.order));

const cities = await getCollection('cities')
  .then(all => all.sort((a, b) => a.data.name.localeCompare(b.data.name)));

const currentPath = Astro.url.pathname;
---

<footer
  class="footer"
  role="contentinfo"
  aria-labelledby="footer-heading"
>
  <h2 id="footer-heading" class="sr-only">Site Footer</h2>

  <div class="padding-normal">
    <div class="container">
      <div class="footer-grid">
        <!-- Left column omitted for brevity -->

        <!-- Right column -->
        <div class="footer-right">
          <div class="links-wrapper">
            <!-- Services -->
            <nav aria-labelledby="services-heading" class="links-column">
              <h3 id="services-heading" class="title-footer">Our Services</h3>
              <ul class="list-links">
                {services.map(svc => {
                  const href = `/services/${svc.slug}`;
                  return (
                    <li>
                      <a
                        href={href}
                        class="link"
                        aria-current={currentPath === href ? 'page' : undefined}
                      >
                        {svc.data.title}
                      </a>
                    </li>
                  );
                })}
                <li>
                  <a
                    href="/get-started"
                    class="link orange"
                    aria-current={currentPath === '/get-started' ? 'page' : undefined}
                  >
                    <strong>Join Mod Squad</strong>
                  </a>
                </li>
              </ul>
            </nav>

            <!-- Service Areas -->
            <nav aria-labelledby="areas-heading" class="links-column">
              <h3 id="areas-heading" class="title-footer">Service Areas</h3>
              <ul class="list-links">
                {cities.map(city => {
                  const href = `/cities/${city.slug}`;
                  return (
                    <li>
                      <a
                        href={href}
                        class="link"
                        aria-current={currentPath === href ? 'page' : undefined}
                      >
                        {city.data.name}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </nav>

            <!-- Resources -->
            <nav aria-labelledby="resources-heading" class="links-column">
              <h3 id="resources-heading" class="title-footer">Resources</h3>
              <ul class="list-links">
                {[
                  { href: '/about', label: 'About Us' },
                  { href: '/reviews', label: 'Reviews' },
                  { href: '/contact', label: 'Contact Us' },
                ].map(item => (
                  <li>
                    <a
                      href={item.href}
                      class="link"
                      aria-current={currentPath === item.href ? 'page' : undefined}
                    >
                      {item.label}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>

            <!-- Legal -->
            <nav aria-labelledby="legal-heading" class="links-column">
              <h3 id="legal-heading" class="title-footer">Legal</h3>
              <ul class="list-links">
                {[
                  { href: '/privacy-policy', label: 'Privacy Policy' },
                  { href: '/terms-of-service', label: 'Terms of Service' },
                  { href: '/a11y', label: 'Accessibility' },
                ].map(item => (
                  <li>
                    <a
                      href={item.href}
                      class="link"
                      aria-current={currentPath === item.href ? 'page' : undefined}
                    >
                      {item.label}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          </div>

          <!-- Social & small print omitted for brevity -->
        </div>
      </div>
    </div>
  </div>
</footer>

<style>
  .link[aria-current="page"] {
    color: var(--primary-500);
  }
  .footer {
    background: linear-gradient(
      to top,
      var(--secondary-500) 0%,
      var(--gray-800) 100%
    );
    border-top: 0.5rem solid var(--primary-500);
  }
  .padding-normal {
    padding-block: 3rem;
  }
  .footer-grid {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 8rem;
  }
  .footer-right {
    justify-self: end;
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  .logo-hours {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
    align-items: center;
  }
  .hours {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .title-footer {
    margin-bottom: 0.75rem;
    font-size: 1rem;
    font-weight: 600;
    color: var(--primary-500);
  }
  .links-wrapper {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: max-content;
    justify-content: flex-end;
    gap: 4rem;
    margin-bottom: 2rem;
  }
  .list-links {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .list-links li + li {
    margin-top: 0.5rem;
  }
  .link {
    font-size: 0.875rem;
    color: var(--accent-500);
    text-decoration: none;
    transition: color 0.2s ease-in-out;
  }
  .link:hover {
    color: var(--primary-500);
  }
  .social-wrapper {
    border-top: 1px solid var(--gray-300);
    padding-top: 1.5rem;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 1rem;
  }
  .social-list {
    display: flex;
    gap: 1rem;
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .body-text.small {
    font-size: 0.875rem;
    margin: 0;
  }
  .body-text.foot {
    margin: 0;
    line-height: 1;
    font-size: clamp(0.875rem, 1vw + 0.5rem, 1rem);
  }
  .link.orange {
    color: var(--primary-500);
  }
  .sr-only {
    display: none;
  }

  @media (max-width: 1099px) {
    .footer-grid {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    .footer-right {
      justify-self: stretch;
    }
    .links-wrapper {
      grid-auto-flow: row;
      grid-auto-columns: 1fr;
      justify-content: start;
    }
    .logo-hours,
    .hours {
      flex-direction: column;
      align-items: flex-start;
    }
    .social-wrapper {
      align-items: flex-start;
      text-align: left;
    }
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
  }
</style>

<script>
  const yearElem = document.getElementById("year");
  if (yearElem) {
    yearElem.textContent = String(new Date().getFullYear());
  }
</script>